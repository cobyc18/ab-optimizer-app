{% comment %}
{
  "name": "Product Carousel",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "carousel_title",
      "label": "Carousel Title",
      "default": "You may also like"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Products to display",
      "limit": 10
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_pagination",
      "label": "Show pagination dots",
      "default": true
    }
  ]
}
{% endcomment %}

<div class="product-carousel-widget" data-carousel-id="carousel-{{ block.id }}">
  <div class="carousel-header">
    <h3 class="carousel-title">{{ block.settings.carousel_title }}</h3>
    {% if block.settings.show_navigation %}
      <div class="carousel-navigation">
        <button class="nav-arrow nav-prev" data-direction="prev">‹</button>
        <button class="nav-arrow nav-next" data-direction="next">›</button>
      </div>
    {% endif %}
  </div>
  
  <div class="carousel-container">
    <div class="carousel-track" data-carousel-track>
      {% for product in block.settings.products limit: 10 %}
        <div class="carousel-slide">
          <div class="product-card">
            {% if product.featured_image %}
              <img src="{{ product.featured_image | img_url: '200x200' }}" 
                   alt="{{ product.title }}" 
                   class="product-image"
                   loading="lazy">
            {% endif %}
            
            <div class="product-info">
              <h4 class="product-title">{{ product.title }}</h4>
              
              <div class="product-pricing">
                {% if product.compare_at_price > product.price %}
                  <span class="price-original">{{ product.compare_at_price | money }}</span>
                  <span class="price-sale">{{ product.price | money }}</span>
                  {% assign discount_percent = product.compare_at_price | minus: product.price | times: 100 | divided_by: product.compare_at_price %}
                  <span class="sale-badge">{{ discount_percent | round }}% OFF</span>
                {% else %}
                  <span class="price-regular">From {{ product.price | money }}</span>
                {% endif %}
              </div>
              
              {% if product.variants.size > 1 %}
                <div class="product-options">
                  {% for variant in product.variants limit: 2 %}
                    <button class="variant-option" data-variant-id="{{ variant.id }}">
                      {{ variant.title }}
                    </button>
                  {% endfor %}
                </div>
              {% endif %}
              
              <button class="add-to-cart-btn{% if forloop.index > 3 %} plus{% endif %}" 
                      data-product-id="{{ product.id }}"
                      data-variant-id="{{ product.selected_or_first_available_variant.id }}">
                {% if forloop.index > 3 %}+ {% endif %}Add
              </button>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
  
  {% if block.settings.show_pagination %}
    <div class="carousel-pagination" data-carousel-pagination>
      {% for product in block.settings.products limit: 10 %}
        <button class="pagination-dot" data-slide="{{ forloop.index0 }}"></button>
      {% endfor %}
    </div>
  {% endif %}
</div>

<style>
.product-carousel-widget {
  margin: 24px 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', sans-serif;
  background: #fafafa;
  border-radius: 12px;
  padding: 24px;
}

.carousel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
}

.carousel-title {
  font-size: 20px;
  font-weight: 700;
  margin: 0;
  color: #1a1a1a;
  letter-spacing: -0.02em;
}

.carousel-navigation {
  display: flex;
  gap: 12px;
}

.nav-arrow {
  width: 40px;
  height: 40px;
  border: 1px solid #e1e5e9;
  background: white;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  color: #6b7280;
  transition: all 0.2s ease;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.nav-arrow:hover {
  background: #f8fafc;
  border-color: #9ca3af;
  transform: translateY(-1px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.carousel-container {
  overflow: hidden;
  position: relative;
  border-radius: 8px;
}

.carousel-track {
  display: flex;
  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

.carousel-slide {
  flex: 0 0 300px;
  margin-right: 20px;
}

.product-card {
  background: white;
  border-radius: 12px;
  padding: 20px;
  height: 100%;
  display: flex;
  flex-direction: column;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
  border: 1px solid #f1f3f4;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.product-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
}

.product-image {
  width: 100%;
  height: 140px;
  object-fit: cover;
  border-radius: 8px;
  margin-bottom: 16px;
  background: #f8f9fa;
}

.product-info {
  flex: 1;
  display: flex;
  flex-direction: column;
}

.product-title {
  font-size: 15px;
  font-weight: 600;
  margin: 0 0 12px 0;
  color: #1a1a1a;
  text-align: center;
  line-height: 1.4;
}

.product-pricing {
  margin-bottom: 12px;
  text-align: center;
}

.price-original {
  text-decoration: line-through;
  color: #9ca3af;
  font-size: 13px;
  margin-right: 8px;
}

.price-sale, .price-regular {
  font-size: 18px;
  font-weight: 700;
  color: #1a1a1a;
}

.sale-badge {
  display: inline-block;
  background: #10b981;
  color: white;
  font-size: 11px;
  font-weight: 600;
  padding: 2px 6px;
  border-radius: 4px;
  margin-left: 8px;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

.product-options {
  display: flex;
  gap: 8px;
  margin-bottom: 16px;
  justify-content: center;
}

.variant-option {
  padding: 6px 12px;
  border: 1px solid #e1e5e9;
  background: white;
  border-radius: 20px;
  font-size: 12px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  color: #6b7280;
}

.variant-option:hover, .variant-option.selected {
  border-color: #3b82f6;
  background: #eff6ff;
  color: #3b82f6;
}

.add-to-cart-btn {
  background: #1e40af;
  color: white;
  border: none;
  padding: 12px 20px;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  margin-top: auto;
  transition: all 0.2s ease;
  letter-spacing: 0.025em;
}

.add-to-cart-btn:hover {
  background: #1d4ed8;
  transform: translateY(-1px);
}

.add-to-cart-btn.plus {
  background: #3b82f6;
  font-size: 13px;
}

.add-to-cart-btn.plus:hover {
  background: #2563eb;
}

.carousel-pagination {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-top: 20px;
}

.pagination-dot {
  width: 10px;
  height: 10px;
  border-radius: 50%;
  border: none;
  background: #d1d5db;
  cursor: pointer;
  transition: all 0.2s ease;
}

.pagination-dot.active {
  background: #1e40af;
  transform: scale(1.2);
}

@media (max-width: 768px) {
  .carousel-slide {
    flex: 0 0 260px;
  }
  
  .carousel-title {
    font-size: 18px;
  }
  
  .product-carousel-widget {
    padding: 16px;
  }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const carousel = document.querySelector('[data-carousel-id="carousel-{{ block.id }}"]');
  if (!carousel) return;
  
  const track = carousel.querySelector('[data-carousel-track]');
  const slides = carousel.querySelectorAll('.carousel-slide');
  const prevBtn = carousel.querySelector('.nav-prev');
  const nextBtn = carousel.querySelector('.nav-next');
  const dots = carousel.querySelectorAll('.pagination-dot');
  
  let currentSlide = 0;
  const slidesToShow = window.innerWidth < 768 ? 1 : 2;
  const maxSlide = Math.max(0, slides.length - slidesToShow);
  
  function updateCarousel() {
    const translateX = -currentSlide * (280 + 16);
    track.style.transform = `translateX(${translateX}px)`;
    
    dots.forEach((dot, index) => {
      dot.classList.toggle('active', index === currentSlide);
    });
  }
  
  function nextSlide() {
    currentSlide = Math.min(currentSlide + 1, maxSlide);
    updateCarousel();
  }
  
  function prevSlide() {
    currentSlide = Math.max(currentSlide - 1, 0);
    updateCarousel();
  }
  
  if (nextBtn) nextBtn.addEventListener('click', nextSlide);
  if (prevBtn) prevBtn.addEventListener('click', prevSlide);
  
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      currentSlide = index;
      updateCarousel();
    });
  });
  
  // Add to cart functionality
  carousel.addEventListener('click', function(e) {
    if (e.target.classList.contains('add-to-cart-btn')) {
      const button = e.target;
      const variantId = button.dataset.variantId;
      
      // Disable button during request
      button.disabled = true;
      button.textContent = 'Adding...';
      
      // Use Shopify's cart form submission approach
      const formData = new FormData();
      formData.append('id', variantId);
      formData.append('quantity', '1');
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        // Success - show feedback
        const originalText = button.textContent.includes('+') ? '+ Add' : 'Add';
        button.textContent = 'Added!';
        button.style.background = '#10b981';
        
        setTimeout(() => {
          button.textContent = originalText;
          button.style.background = '';
          button.disabled = false;
        }, 1500);
        
        // Trigger cart update events for themes
        document.dispatchEvent(new CustomEvent('cart:updated'));
        document.dispatchEvent(new CustomEvent('cart:refresh'));
        
        // Update cart count if element exists
        const cartCount = document.querySelector('.cart-count');
        if (cartCount) {
          fetch('/cart.js')
            .then(res => res.json())
            .then(cart => {
              cartCount.textContent = cart.item_count;
            });
        }
      })
      .catch(error => {
        console.error('Error adding to cart:', error);
        
        // Reset button on error
        const originalText = button.textContent.includes('+') ? '+ Add' : 'Add';
        button.textContent = originalText;
        button.disabled = false;
        
        // Show user-friendly error
        alert('Sorry, this product could not be added to your cart. Please try again.');
      });
    }
  });
  
  updateCarousel();
});
</script>

{% schema %}
{
  "name": "Product Carousel",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "carousel_title",
      "label": "Carousel Title",
      "default": "You may also like"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Products to display",
      "limit": 10
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show navigation arrows",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_pagination",
      "label": "Show pagination dots",
      "default": true
    }
  ]
}
{% endschema %}
