{%- comment -%}
  ab-test-ab-redirect.liquid
  Injects JS for A/B bucketing and redirect using ?view=ab-b
  Usage: {% render 'ab-test-ab-redirect' %}
{%- endcomment -%}

{% if product %}
<script>
(function() {
  // Core A/B test functions
  function determineCurrentVariantGlobal() {
    var keys = Object.keys(localStorage);
    var testKeys = keys.filter(key => key.startsWith('ab_test_'));
    
    if (testKeys.length > 0) {
      var bucket = localStorage.getItem(testKeys[0]);
      if (bucket) return bucket;
    }
    
    var url = new URL(window.location.href);
    var currentView = url.searchParams.get('view') || "";
    
    if (currentView) {
      return currentView === "default" ? "A" : "B";
    }
    
    return "A";
  }

  function storeVariantForPurchase(productId, variant) {
    var variantKey = 'ab_variant_' + productId;
    var variantData = {
      variant: variant,
      timestamp: Date.now(),
      pageUrl: window.location.href
    };
    sessionStorage.setItem(variantKey, JSON.stringify(variantData));
  }

  function getStoredVariantForPurchase(productId) {
    var variantKey = 'ab_variant_' + productId;
    var variantData = sessionStorage.getItem(variantKey);
    if (variantData) {
      try {
        var data = JSON.parse(variantData);
        return data.variant;
      } catch (e) {
        // Silent error
      }
    }
    return null;
  }
  
  function determineCurrentVariant() {
    if (window.currentVariant) return window.currentVariant;
    
    if (window.getABTestVariant && typeof window.getABTestVariant === 'function') {
      var variant = window.getABTestVariant();
      if (variant) return variant;
    }
    
    var testId = window.currentTestId;
    if (testId) {
      var bucketKey = 'ab_test_' + testId;
      var bucket = localStorage.getItem(bucketKey);
      if (bucket) return bucket;
    }
    
    var url = new URL(window.location.href);
    var currentView = url.searchParams.get('view') || "";
    
    if (currentView) return currentView;
    
    return "default";
  }

  function getCurrentTestId() {
    if (window.getABTestId && typeof window.getABTestId === 'function') {
      return window.getABTestId();
    }
    return window.currentTestId || localStorage.getItem('current_test_id');
  }

  function logEvent(eventType, productId, variant, value, metadata) {
    var testId = getCurrentTestId();
    if (!testId) return;
    
    fetch('https://ab-optimizer-app.onrender.com/app/ab-event', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ 
        testId: testId,
        variant: variant, 
        eventType: eventType, 
        productId: String(productId),
        value: value || null,
        metadata: metadata || {}
      })
    }).catch(function(e) {
      // Silent error
    });
  }

  function trackAddToCart() {
    var testId = getCurrentTestId();
    if (!testId) return;
    
    var currentVariant = determineCurrentVariant();
    var productId = {{ product.id | json }};
    
    logEvent('add_to_cart', productId, currentVariant, 0, {
      productTitle: {{ product.title | json }},
      productPrice: {{ product.price | json }},
      cartCount: 0
    });
  }

  function trackCheckoutInitiated() {
    var testId = getCurrentTestId();
    if (!testId) return;
    
    var currentVariant = determineCurrentVariant();
    var productId = {{ product.id | json }};
    
    logEvent('checkout_initiated', productId, currentVariant);
  }

  function updateCartCountAndLog() {
    var testId = getCurrentTestId();
    if (!testId) return;
    
    var currentVariant = determineCurrentVariant();
    var productId = {{ product.id | json }};
    var cartCount = 0;
    
    // Try to get cart count from various sources
    var cartCountElement = document.querySelector('[data-cart-count], .cart-count, #cart-count');
    if (cartCountElement) {
      cartCount = parseInt(cartCountElement.textContent) || 0;
    }
    
    logEvent('cart_updated', productId, currentVariant, 0, {
      productTitle: {{ product.title | json }},
      productPrice: {{ product.price | json }},
      cartCount: cartCount,
      previousCount: 0,
      action: 'update',
      productId: productId
    });
  }

  // Setup cart tracking
  function setupCartTracking() {
    if (!window.getABTestId) {
      var storedTestId = localStorage.getItem('current_test_id');
      var storedVariant = localStorage.getItem('current_variant');
      
      if (storedTestId) {
        window.getABTestId = function() { return storedTestId; };
        window.getABTestVariant = function() { return storedVariant; };
      }
    }
    
    // Form submissions
    document.addEventListener('submit', function(event) {
      var form = event.target;
      
      if (form && (
        form.action.includes('/cart/add') || 
        form.classList.contains('product-form') ||
        form.querySelector('[name="add"]') ||
        form.querySelector('[type="submit"][value*="Add"]') ||
        form.querySelector('[data-action="add-to-cart"]') ||
        form.getAttribute('action') && form.getAttribute('action').includes('/cart/add')
      )) {
        trackAddToCart();
      }
      
      if (form && (
        form.action.includes('/checkout') ||
        form.classList.contains('checkout-form') ||
        form.querySelector('[type="submit"][value*="checkout"]') ||
        form.querySelector('[type="submit"][value*="check out"]') ||
        form.querySelector('[data-action="checkout"]') ||
        form.querySelector('[data-action="go-to-checkout"]')
      )) {
        trackCheckoutInitiated();
      }
    });
    
    // Button clicks
    var addToCartClickTimeout;
    document.addEventListener('click', function(event) {
      var target = event.target;
      var targetText = target.textContent ? target.textContent.toLowerCase() : '';
      var targetClass = target.className ? (typeof target.className === 'string' ? target.className : target.className.toString()).toLowerCase() : '';
      var targetId = target.id ? target.id.toLowerCase() : '';
      
      if (target && (
        targetText.includes('add to cart') ||
        targetText.includes('add to bag') ||
        targetClass.includes('add-to-cart') ||
        targetClass.includes('add-to-bag') ||
        targetId.includes('add-to-cart') ||
        target.getAttribute('data-action') === 'add-to-cart' ||
        target.getAttribute('data-action') === 'add-to-bag' ||
        target.getAttribute('aria-label') && target.getAttribute('aria-label').toLowerCase().includes('add to cart')
      )) {
        clearTimeout(addToCartClickTimeout);
        addToCartClickTimeout = setTimeout(function() {
          trackAddToCart();
        }, 100);
      }
    });
    
    // Cart updates
    var cartUpdateTimeout;
    document.addEventListener('DOMContentLoaded', function() {
      var observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(mutation) {
          if (mutation.type === 'childList') {
            clearTimeout(cartUpdateTimeout);
            cartUpdateTimeout = setTimeout(function() {
              updateCartCountAndLog();
            }, 500);
          }
        });
      });
      
      observer.observe(document.body, {
        childList: true,
        subtree: true
      });
    });
  }

  // Add variant info to checkout forms
  function addVariantToCheckoutForms() {
    var currentVariant = determineCurrentVariant();
    var currentTestId = window.currentTestId || (window.getABTestId ? window.getABTestId() : null);
    
    if (!currentVariant || !currentTestId) return;
    
    var forms = document.querySelectorAll('form');
    forms.forEach(function(form) {
      var formAction = form.action || '';
      var formClass = form.className || '';
      
      if (formAction.includes('/checkout') || 
          formAction.includes('/cart') ||
          formClass.includes('checkout') ||
          formClass.includes('cart')) {
        
        var variantInput = form.querySelector('input[name="ab_variant"]');
        if (!variantInput) {
          variantInput = document.createElement('input');
          variantInput.type = 'hidden';
          variantInput.name = 'ab_variant';
          variantInput.value = currentVariant;
          form.appendChild(variantInput);
        }
        
        var testIdInput = form.querySelector('input[name="ab_test_id"]');
        if (!testIdInput) {
          testIdInput = document.createElement('input');
          testIdInput.type = 'hidden';
          testIdInput.name = 'ab_test_id';
          testIdInput.value = currentTestId;
          form.appendChild(testIdInput);
        }
      }
    });
  }

  // Main A/B test initialization
  if (typeof window.abTestInitialized === 'undefined') {
    window.abTestInitialized = true;
    
    (function() {
      var productId = {{ product.id | json }};
      var currentView = new URLSearchParams(window.location.search).get('view') || "";
      var isThemeEditor = window.location.hostname.includes('myshopify.com') && window.location.pathname.includes('/admin');
      
      if (isThemeEditor) return;
      
      if (currentView) {
        logEvent('impression', productId, currentView);
        return;
      }
      
      fetch('https://ab-optimizer-app.onrender.com/app/ab-test-config?productId=' + productId)
        .then(function(res) { return res.json(); })
        .then(function(config) {
          if (!config.testId) return;
          
          var testId = config.testId;
          var variantA = config.templateA;
          var variantB = config.templateB;
          var bucketKey = 'ab_test_' + testId;
          var bucket = localStorage.getItem(bucketKey);
          
          if (!bucket) {
            bucket = Math.random() < config.trafficSplit / 100 ? variantA : variantB;
            localStorage.setItem(bucketKey, bucket);
          }
          
          window.currentTestId = testId;
          window.currentVariant = bucket;
          localStorage.setItem('current_test_id', testId);
          localStorage.setItem('current_variant', bucket);
          window.abTestId = testId;
          window.abTestVariant = bucket;
          
          window.getABTestId = function() { return testId; };
          window.getABTestVariant = function() { return bucket; };
          
          if (bucket && bucket !== "" && !currentView) {
            var url = new URL(window.location.href);
            url.searchParams.set('view', bucket);
            window.location.replace(url.toString());
          }
          
          var impressionKey = 'impression-' + productId + '-' + Date.now();
          if (!sessionStorage.getItem(impressionKey)) {
            sessionStorage.setItem(impressionKey, 'true');
            logEvent('impression', productId, bucket);
          }
          
          if (typeof storeVariantForPurchase === 'function') {
            storeVariantForPurchase(productId, bucket);
          }
        })
        .catch(function(error) {
          // Silent error
        });
    })();

    addVariantToCheckoutForms();
    
    var observer = new MutationObserver(function(mutations) {
      mutations.forEach(function(mutation) {
        if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
          addVariantToCheckoutForms();
        }
      });
    });
    
    observer.observe(document.body, {
      childList: true,
      subtree: true
    });
    
    setupCartTracking();
  }
})();
</script>
{% endif %} 